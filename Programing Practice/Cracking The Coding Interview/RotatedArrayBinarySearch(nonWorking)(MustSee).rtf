{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf400
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red170\green13\blue145;\red28\green0\blue207;\red92\green38\blue153;
\red196\green26\blue22;\red0\green116\blue0;\red46\green13\blue110;\red38\green71\blue75;\red63\green110\blue116;
}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab529
\pard\tx529\pardeftab529\pardirnatural

\f0\fs22 \cf2 \CocoaLigature0 static\cf0  \cf2 const\cf0  \cf2 int\cf0  size = \cf3 6\cf0 ;\
\
\cf2 void\cf0  ModifiedBinarysearch(\cf2 int\cf0  a[], \cf2 int\cf0  key, \cf2 int\cf0  low, \cf2 int\cf0  high)\
\{\
    \cf2 if\cf0 (low <= high)\
    \{\
        \cf2 int\cf0  mid = (low+high)/\cf3 2\cf0 ;\
        \cf2 if\cf0 (key == a[mid])\
        \{\
            \cf4 cout\cf0 <<\cf5 "found it\\n"\cf0 ;\
            \cf2 return\cf0 ;\
        \}\
        \cf2 else\cf0 \
            \cf2 if\cf0 (key < a[mid])\
        \{\
            \cf2 if\cf0 (a[mid] < a[high] && a[mid] < a[low])\
            \{\
                \cf6 //Go left\cf0 \
                \cf4 cout\cf0 <<\cf5 "Going left\\n"\cf0 <<\cf5 "low = "\cf0 <<low<<\cf5 " high = "\cf0 <<mid-\cf3 1\cf0 <<\cf7 endl\cf0 ;\
                \cf8 ModifiedBinarysearch\cf0 (a, key, low, mid-\cf3 1\cf0 );\
            \}\
            \cf2 else\cf0 \
            \{\
                \cf6 //Go right\cf0 \
                \cf4 cout\cf0 <<\cf5 "Going right\\n"\cf0 <<\cf5 "low = "\cf0 <<mid+\cf3 1\cf0 <<\cf5 " high = "\cf0 <<high<<\cf7 endl\cf0 ;\
                \cf8 ModifiedBinarysearch\cf0 (a, key, mid+\cf3 1\cf0 , high);\
            \}\
        \}\
        \cf2 else\cf0 \
            \cf2 if\cf0 (key > a[mid])\
        \{\
            \cf2 if\cf0 (a[mid] < a[high] && a[mid] < a[low])\
            \{\
                \cf6 //Go left\cf0 \
                \cf4 cout\cf0 <<\cf5 "Going left\\n"\cf0 <<\cf5 "low = "\cf0 <<low<<\cf5 " high = "\cf0 <<mid-\cf3 1\cf0 <<\cf7 endl\cf0 ;\
                \cf8 ModifiedBinarysearch\cf0 (a, key, low, mid-\cf3 1\cf0 );\
            \}\
            \cf2 else\cf0 \
            \{\
                \cf6 //Go right\cf0 \
                \cf4 cout\cf0 <<\cf5 "Going right\\n"\cf0 <<\cf5 "low = "\cf0 <<mid+\cf3 1\cf0 <<\cf5 " high = "\cf0 <<high<<\cf7 endl\cf0 ;\
                \cf8 ModifiedBinarysearch\cf0 (a, key, mid+\cf3 1\cf0 , high);\
            \}\
        \}\
        \cf2 else\cf0 \
            \cf2 if\cf0 (a[mid] == a[low])\
            \{\
                \cf6 //Left half is all repeats\cf0 \
                \cf6 // it can be 2, 2, 2, 3, 4, 5 or 3, 3, 3, 1, 2\cf0 \
                \cf6 //if right half is different\cf0 \
                \cf2 if\cf0 (a[mid] != a[high])\
                \{\
                    \cf6 //Go right\cf0 \
                    \cf4 cout\cf0 <<\cf5 "Going right\\n"\cf0 <<\cf5 "low = "\cf0 <<mid+\cf3 1\cf0 <<\cf5 " high = "\cf0 <<high<<\cf7 endl\cf0 ;\
                    \cf8 ModifiedBinarysearch\cf0 (a, key, mid+\cf3 1\cf0 , high);\
                \}\
            \}\
        \cf2 else\cf0 \
            \cf2 if\cf0 (a[mid]==a[high])\
            \{\
                \cf6 //Right half is full of repeats\cf0 \
                \cf6 // it can be 1, 2, 3, 3, 3 or 4, 5, 3, 3, 3\cf0 \
                \cf6 //if left half is different\cf0 \
                \cf2 if\cf0 (a[mid] != a[low])\
                \{\
                    \cf6 //Go left\cf0 \
                    \cf4 cout\cf0 <<\cf5 "Going left\\n"\cf0 <<\cf5 "low = "\cf0 <<low<<\cf5 " high = "\cf0 <<mid-\cf3 1\cf0 <<\cf7 endl\cf0 ;\
                    \cf8 ModifiedBinarysearch\cf0 (a, key, low, mid-\cf3 1\cf0 );\
                \}\
            \}\
        \cf2 else\cf0 \
        \{\
            \cf6 //Search both halves\cf0 \
            \
            \cf6 //Go left\cf0 \
            \cf4 cout\cf0 <<\cf5 "Going left\\n"\cf0 <<\cf5 "low = "\cf0 <<low<<\cf5 " high = "\cf0 <<mid-\cf3 1\cf0 <<\cf7 endl\cf0 ;\
            \cf8 ModifiedBinarysearch\cf0 (a, key, low, mid-\cf3 1\cf0 );\
            \
            \cf6 //Go right\cf0 \
            \cf4 cout\cf0 <<\cf5 "Going right\\n"\cf0 <<\cf5 "low = "\cf0 <<mid+\cf3 1\cf0 <<\cf5 " high = "\cf0 <<high<<\cf7 endl\cf0 ;\
            \cf8 ModifiedBinarysearch\cf0 (a, key, mid+\cf3 1\cf0 , high);\
            \
        \}\
    \}\
    \cf2 else\cf0 \
        \cf4 cout\cf0 <<\cf5 "Nooo\\n"\cf0 ;\
    \cf2 return\cf0 ;\
\}\
\
\cf2 int\cf0  main()\
\{\
    \cf2 int\cf0  a[\cf9 size\cf0 ] = \{\cf3 2\cf0 , \cf3 2\cf0 , \cf3 2\cf0 , \cf3 3\cf0 , \cf3 4\cf0 , \cf3 2\cf0 \};\
    \cf8 ModifiedBinarysearch\cf0 (a, \cf3 3\cf0 , \cf3 0\cf0 , \cf3 5\cf0 );\
    \
    \
    \
\}}