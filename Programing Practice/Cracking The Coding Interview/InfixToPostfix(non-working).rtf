{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf400
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red92\green38\blue153;\red170\green13\blue145;\red196\green26\blue22;
\red28\green0\blue207;\red63\green110\blue116;\red46\green13\blue110;\red38\green71\blue75;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab529
\pard\tx529\pardeftab529\pardirnatural

\f0\fs22 \cf2 \CocoaLigature0 stack\cf0 <\cf3 char\cf0 >operators;\
\cf3 static\cf0  \cf3 const\cf0  \cf2 string\cf0  infix = \cf4 "A+B^C-D*E-A/C"\cf0 ;\
\cf3 static\cf0  \cf3 const\cf0  \cf3 int\cf0  size = \cf5 13\cf0 ;\
\cf3 char\cf0  a[\cf6 size\cf0 ];\
\
\cf3 int\cf0  precidence(\cf3 char\cf0  ch)\
\{\
    \cf3 switch\cf0 (ch)\
    \{\
        \cf3 case\cf0  \cf5 '^'\cf0 : \cf3 return\cf0  \cf5 5\cf0 ;\
            \cf3 break\cf0 ;\
        \cf3 case\cf0  \cf5 '/'\cf0 : \cf3 return\cf0  \cf5 4\cf0 ;\
            \cf3 break\cf0 ;\
        \cf3 case\cf0  \cf5 '*'\cf0 : \cf3 return\cf0  \cf5 4\cf0 ;\
            \cf3 break\cf0 ;\
        \cf3 case\cf0  \cf5 '+'\cf0 : \cf3 return\cf0  \cf5 3\cf0 ;\
            \cf3 break\cf0 ;\
        \cf3 case\cf0  \cf5 '-'\cf0 : \cf3 return\cf0  \cf5 3\cf0 ;\
            \cf3 break\cf0 ;\
        \cf3 default\cf0 : \cf3 return\cf0  \cf5 0\cf0 ;\
            \cf3 break\cf0 ;\
    \}\
\}\
\
\cf3 void\cf0  postfix()\
\{\
    \cf3 int\cf0  j = \cf5 0\cf0 ;\
    \cf3 for\cf0 (\cf3 int\cf0  i = \cf5 0\cf0 ; i < \cf6 size\cf0 ; i++)\
    \{\
        \cf3 if\cf0 (\cf7 isalpha\cf0 (\cf6 infix\cf0 [\cf7 i\cf0 ]) == \cf3 true\cf0 )\
        \{\
            \cf6 a\cf0 [j] = \cf6 infix\cf0 [\cf7 i\cf0 ];\
            j++;\
        \}\
        \cf3 else\cf0 \
        \{\
            \cf3 if\cf0 (\cf6 infix\cf0 [\cf7 i\cf0 ] == \cf5 '('\cf0 )\
            \{\
                \cf6 operators\cf0 .\cf7 push\cf0 (\cf6 infix\cf0 [\cf7 i\cf0 ]);\
            \}\
            \cf3 else\cf0 \
                \cf3 if\cf0 (\cf6 infix\cf0 [\cf7 i\cf0 ] == \cf5 ')'\cf0 )\
                \{\
                    \cf3 char\cf0  top = \cf6 operators\cf0 .\cf7 top\cf0 ();\
                    \cf6 operators\cf0 .\cf7 pop\cf0 ();\
                    \
                    \cf3 while\cf0 (top != \cf5 '('\cf0  || !\cf6 operators\cf0 .\cf7 empty\cf0 ())\
                    \{\
                        \cf6 a\cf0 [j] = top;\
                        j++;\
                        top = \cf6 operators\cf0 .\cf7 top\cf0 ();\
                        \cf6 operators\cf0 .\cf7 pop\cf0 ();\
                    \}\
                \}\
            \cf3 else\cf0 \
            \{\
                \cf3 if\cf0 (\cf8 precidence\cf0 (\cf6 infix\cf0 [\cf7 i\cf0 ]) > \cf8 precidence\cf0 (\cf6 operators\cf0 .\cf7 top\cf0 ()))\
                \{\
                    \cf6 operators\cf0 .\cf7 push\cf0 (\cf6 infix\cf0 [\cf7 i\cf0 ]);\
                \}\
                \cf3 else\cf0 \
                \{\
                    \cf3 char\cf0  top = \cf6 operators\cf0 .\cf7 top\cf0 ();\
                    \cf6 operators\cf0 .\cf7 pop\cf0 ();\
                    \cf3 while\cf0 (\cf8 precidence\cf0 (\cf6 operators\cf0 .\cf7 top\cf0 ()) > \cf8 precidence\cf0 (\cf6 infix\cf0 [\cf7 i\cf0 ]) || !\cf6 operators\cf0 .\cf7 empty\cf0 ())\
                    \{\
                        \cf6 a\cf0 [j] = top;\
                        j++;\
                        top = \cf6 operators\cf0 .\cf7 top\cf0 ();\
                        \cf6 operators\cf0 .\cf7 pop\cf0 ();\
                    \}\
                    \cf6 operators\cf0 .\cf7 push\cf0 (\cf6 infix\cf0 [\cf7 i\cf0 ]);\
                \}\
            \}\
        \}\
    \}\
\}\
\
\cf3 int\cf0  main()\
\{\
    \cf8 postfix\cf0 ();\
\}}