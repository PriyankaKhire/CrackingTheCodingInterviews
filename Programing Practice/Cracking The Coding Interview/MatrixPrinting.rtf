{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf400
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red170\green13\blue145;\red28\green0\blue207;\red0\green116\blue0;
\red92\green38\blue153;\red196\green26\blue22;\red46\green13\blue110;\red38\green71\blue75;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab529
\pard\tx529\pardeftab529\pardirnatural

\f0\fs22 \cf2 \CocoaLigature0 void\cf0  swap(\cf2 int\cf0  &a, \cf2 int\cf0  &b)\
\{\
    \cf2 int\cf0  temp = a;\
    a = b;\
    b = temp;\
\}\
\
\cf2 int\cf0  main()\
\{\
    \cf2 static\cf0  \cf2 const\cf0  \cf2 int\cf0  N = \cf3 3\cf0 ;\
    \cf2 int\cf0  matrix[N][N] = \{\{\cf3 1\cf0 ,\cf3 2\cf0 ,\cf3 3\cf0 \},\
        \{\cf3 4\cf0 ,\cf3 5\cf0 ,\cf3 6\cf0 \},\
        \{\cf3 7\cf0 ,\cf3 8\cf0 ,\cf3 9\cf0 \}\
    \};\
    \
    \cf4 //Printing matrix\cf0 \
    \cf5 cout\cf0 <<\cf6 "The matrix\\n"\cf0 ;\
    \cf2 for\cf0 (\cf2 int\cf0  i = \cf3 0\cf0 ; i < N; i ++)\
    \{\
        \cf2 for\cf0 (\cf2 int\cf0  j = \cf3 0\cf0 ; j < N; j++)\
        \{\
            \cf5 cout\cf0 <<matrix[i][j]<<\cf6 " "\cf0 ;\
        \}\
        \cf5 cout\cf0 <<\cf7 endl\cf0 ;\
    \}\
    \cf4 //Printing diagonal\cf0 \
    \cf5 cout\cf0 <<\cf6 "Diagonal elements\\n"\cf0 ;\
    \cf2 for\cf0 (\cf2 int\cf0  i = \cf3 0\cf0 ; i < N; i ++)\
    \{\
        \cf2 for\cf0 (\cf2 int\cf0  j = \cf3 0\cf0 ; j < N; j++)\
        \{\
            \cf2 if\cf0 (i == j)\
            \{\
                \cf5 cout\cf0 <<matrix[i][j]<<\cf6 " "\cf0 ;\
            \}\
        \}\
    \}\
    \
    \cf4 //Printing upper triangle\cf0 \
    \cf5 cout\cf0 <<\cf6 "\\nUpper triangle\\n"\cf0 ;\
    \cf2 int\cf0  row = \cf3 0\cf0 , col = \cf3 1\cf0 ;\
    \cf2 while\cf0 (row != N)\
    \{\
        \cf2 if\cf0 (row !=col)\
        \{\
            \cf2 if\cf0 (col > row)\
            \{\
                \cf2 if\cf0 (col != N) \cf4 //N = 3 but col can be 0,1,2 so it won't reach 3\cf0 \
                \{\
                    \cf5 cout\cf0 <<matrix[row][col]<<\cf6 " "\cf0 ;\
                    col++;\
                \}\
                \cf2 if\cf0 (col == N)\
                \{\
                    row++;\
                    col = row+\cf3 1\cf0 ;\
                \}\
            \}\
        \}\
    \}\
    \
    \cf4 //Printing Lower Triangle\cf0 \
    \cf5 cout\cf0 <<\cf6 "\\nLower triangle\\n"\cf0 ;\
    row = \cf3 1\cf0 ;\
    col = \cf3 0\cf0 ;\
    \cf2 while\cf0 (row != N)\
    \{\
        \cf2 if\cf0 (row != col)\
        \{\
            \cf2 if\cf0 (col < row)\
            \{\
                \cf5 cout\cf0 <<matrix[row][col]<<\cf6 " "\cf0 ;\
                col++;\
            \}\
        \}\
        \cf2 else\cf0  \cf2 if\cf0 (row == col)\
        \{\
            row++;\
            col = \cf3 0\cf0 ;\
        \}\
    \}\
\
    \cf4 //Transpose Matrix 1\cf0 \
    row = \cf3 0\cf0 ;\
    col = \cf3 1\cf0 ;\
    \cf2 while\cf0 (row != N)\
    \{\
        \cf2 if\cf0 (row !=col)\
        \{\
            \cf2 if\cf0 (col > row)\
            \{\
                \cf2 if\cf0 (col != N) \cf4 //N = 3 but col can be 0,1,2 so it won't reach 3\cf0 \
                \{\
                    \cf8 swap\cf0 (matrix[row][col], matrix[col][row]);\
                    col++;\
                \}\
                \cf2 if\cf0 (col == N)\
                \{\
                    row++;\
                    col = row+\cf3 1\cf0 ;\
                \}\
            \}\
        \}\
    \}\
    \
    \cf5 cout\cf0 <<\cf6 "\\nThe Transpose -> 1\\n"\cf0 ;\
    \cf2 for\cf0 (\cf2 int\cf0  i = \cf3 0\cf0 ; i < N; i ++)\
    \{\
        \cf2 for\cf0 (\cf2 int\cf0  j = \cf3 0\cf0 ; j < N; j++)\
        \{\
            \cf5 cout\cf0 <<matrix[i][j]<<\cf6 " "\cf0 ;\
        \}\
        \cf5 cout\cf0 <<\cf7 endl\cf0 ;\
    \}\
    \
    \cf4 //Transpose Matrix 2\cf0 \
    row = \cf3 1\cf0 ;\
    col = \cf3 0\cf0 ;\
    \cf2 while\cf0 (row != N)\
    \{\
        \cf2 if\cf0 (row != col)\
        \{\
            \cf2 if\cf0 (col < row)\
            \{\
                \cf8 swap\cf0 (matrix[row][col],matrix[col][row]);\
                col++;\
            \}\
        \}\
        \cf2 else\cf0  \cf2 if\cf0 (row == col)\
        \{\
            row++;\
            col = \cf3 0\cf0 ;\
        \}\
    \}\
    \
    \cf5 cout\cf0 <<\cf6 "\\nThe Transpose -> 2\\n"\cf0 ;\
    \cf2 for\cf0 (\cf2 int\cf0  i = \cf3 0\cf0 ; i < N; i ++)\
    \{\
        \cf2 for\cf0 (\cf2 int\cf0  j = \cf3 0\cf0 ; j < N; j++)\
        \{\
            \cf5 cout\cf0 <<matrix[i][j]<<\cf6 " "\cf0 ;\
        \}\
        \cf5 cout\cf0 <<\cf7 endl\cf0 ;\
    \}\
\}}