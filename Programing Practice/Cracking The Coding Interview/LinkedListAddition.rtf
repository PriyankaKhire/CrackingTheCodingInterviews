{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf400
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red170\green13\blue145;\red63\green110\blue116;\red92\green38\blue153;
\red196\green26\blue22;\red46\green13\blue110;\red28\green0\blue207;\red38\green71\blue75;\red0\green116\blue0;
}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab529
\pard\tx529\pardeftab529\pardirnatural

\f0\fs22 \cf2 \CocoaLigature0 struct\cf0  LinkedList\
\{\
    \cf2 int\cf0  data;\
    \cf3 LinkedList\cf0  *link;\
\};\
\
\cf3 LinkedList\cf0  *RootNode1 = \cf2 new\cf0  \cf3 LinkedList\cf0 ;\
\cf3 LinkedList\cf0  *RootNode2 = \cf2 new\cf0  \cf3 LinkedList\cf0 ;\
\
\
\cf2 void\cf0  display(\cf3 LinkedList\cf0  *root)\
\{\
    \cf3 LinkedList\cf0  *ptr = root;\
    \cf2 while\cf0 (ptr != \cf2 NULL\cf0 )\
    \{\
        \cf4 cout\cf0 <<ptr->\cf3 data\cf0 <<\cf5 "->"\cf0 ;\
        ptr = ptr->\cf3 link\cf0 ;\
    \}\
    \cf4 cout\cf0 <<\cf6 endl\cf0 ;\
\}\
\
\cf2 void\cf0  addition(\cf2 int\cf0  carry, \cf3 LinkedList\cf0  *n1, \cf3 LinkedList\cf0  *n2)\
\{\
    \cf2 if\cf0 (n1 != \cf2 NULL\cf0  && n2 != \cf2 NULL\cf0 )\
    \{\
        \cf2 int\cf0  sum = n1->\cf3 data\cf0  + n2->\cf3 data\cf0  + carry;\
        carry = sum/\cf7 10\cf0 ;\
        \cf4 cout\cf0 <<sum%\cf7 10\cf0 ;\
        \cf8 addition\cf0 (carry, n1->\cf3 link\cf0 , n2->\cf3 link\cf0 );\
    \}\
    \cf2 if\cf0 (n1 == \cf2 NULL\cf0  && n2 != \cf2 NULL\cf0 )\
    \{\
        \cf2 int\cf0  sum =  n2->\cf3 data\cf0  + carry;\
        carry = sum/\cf7 10\cf0 ;\
        \cf4 cout\cf0 <<sum%\cf7 10\cf0 ;\
        \cf8 addition\cf0 (carry, \cf2 NULL\cf0 , n2->\cf3 link\cf0 );\
    \}\
    \cf2 if\cf0 (n1 != \cf2 NULL\cf0  && n2 == \cf2 NULL\cf0 )\
    \{\
        \cf2 int\cf0  sum = n1->\cf3 data\cf0  + carry;\
        carry = sum/\cf7 10\cf0 ;\
        \cf4 cout\cf0 <<sum%\cf7 10\cf0 ;\
        \cf8 addition\cf0 (carry, n1->\cf3 link\cf0 , \cf2 NULL\cf0 );\
    \}\
    \cf2 if\cf0 (n1 == \cf2 NULL\cf0  && n2 == \cf2 NULL\cf0  && carry != \cf7 0\cf0 )\
    \{\
        \cf4 cout\cf0 <<carry;\
        \cf2 return\cf0 ;\
    \}\
\}\
\
\
\cf2 int\cf0  main()\
\{\
    \cf3 RootNode1\cf0 ->\cf3 data\cf0  = \cf7 1\cf0 ;\
    \cf3 RootNode1\cf0 ->\cf3 link\cf0  = \cf2 NULL\cf0 ;\
    \
    \cf9 /*int i =6;\
    \
    while(i > 0)\
    \{\
        LinkedList *NewNode = new LinkedList;\
        if(i == 5 || i == 6)\
        \{\
            NewNode->data = i;\
            NewNode->link = RootNode1;\
            RootNode1 = NewNode;\
        \}\
        i--;\
    \}*/\cf0 \
    \
    \cf8 display\cf0 (\cf3 RootNode1\cf0 );\
    \
    \cf3 RootNode2\cf0 ->\cf3 data\cf0  = \cf7 9\cf0 ;\
    \cf3 RootNode2\cf0 ->\cf3 link\cf0  = \cf2 NULL\cf0 ;\
    \
    \cf2 int\cf0  j =\cf7 9\cf0 ;\
    \
    \cf2 while\cf0 (j > \cf7 0\cf0 )\
    \{\
        \cf3 LinkedList\cf0  *NewNode = \cf2 new\cf0  \cf3 LinkedList\cf0 ;\
        \cf2 if\cf0 (j == \cf7 9\cf0  || j == \cf7 8\cf0  )\
        \{\
            \cf2 if\cf0 (j == \cf7 8\cf0 )\
            \{\
               NewNode->\cf3 data\cf0  = j+\cf7 1\cf0 ;\
            \}\
            \cf2 else\cf0 \
            \{\
                NewNode->\cf3 data\cf0  = j;\
            \}\
            \
            NewNode->\cf3 link\cf0  = \cf3 RootNode2\cf0 ;\
            \cf3 RootNode2\cf0  = NewNode;\
        \}\
        j--;\
    \}\
    \cf8 display\cf0 (\cf3 RootNode2\cf0 );\
    \cf8 addition\cf0 (\cf7 0\cf0 , \cf3 RootNode1\cf0 , \cf3 RootNode2\cf0 );\
    \
    \
\}}