{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf400
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red0\green116\blue0;\red92\green38\blue153;\red170\green13\blue145;
\red28\green0\blue207;\red63\green110\blue116;\red46\green13\blue110;\red196\green26\blue22;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab529
\pard\tx529\pardeftab529\pardirnatural

\f0\fs22 \cf2 \CocoaLigature0 /*\
 Find the largest rectangular area possible in a given histogram where the largest rectangle can be made of a number of contiguous bars. For simplicity, assume that all bars have same width and the width is 1 unit.\
 \
 For example, consider the following histogram with 7 bars of heights \{6, 2, 5, 4, 5, 2, 6\}. The largest possible rectangle possible is 12 (see the below figure, the max area rectangle is highlighted in red)\
\
{\field{\*\fldinst{HYPERLINK "https://www.youtube.com/watch?v=ZmnqCZp9bBs&feature=youtu.be"}}{\fldrslt https://www.youtube.com/watch?v=ZmnqCZp9bBs&feature=youtu.be}}\
*/\cf0 \
\
\cf3 stack\cf0 <\cf4 int\cf0 > stk;\
\
\
\cf4 int\cf0  main()\
\{\
    \cf4 const\cf0  \cf4 static\cf0  \cf4 int\cf0  n = \cf5 7\cf0 ;\
    \cf4 int\cf0  input[n] = \{\cf5 6\cf0 , \cf5 2\cf0 , \cf5 5\cf0 , \cf5 4\cf0 , \cf5 5\cf0 , \cf5 1\cf0 , \cf5 6\cf0 \};\
    \
    \cf2 /* Add to the stack if \
     stack is empty or if the current value in stack is less than the value being added\
     \
     if current vaue is less than the value at the top of the stack then keep popping untill \
     the stack becomes empty or current value is less than or eual at the top of the stack\
     \
     if(stack is empty)\
     \{\
        area = input[top] * i\
     \}\
     else\
     \{\
        area = input[top] * (i - current stack top - 1)\
     \}\
     \
     */\cf0 \
    \
    \cf4 int\cf0  area = \cf5 0\cf0 ;\
    \cf4 int\cf0  MaxArea = -\cf5 1\cf0 ;\
    \cf4 int\cf0  top = \cf5 0\cf0 ;\
    \cf4 int\cf0  i = \cf5 0\cf0 ;\
    \
    \cf4 while\cf0 (i < n)\
    \{\
        \cf4 if\cf0 (\cf6 stk\cf0 .\cf7 empty\cf0 () || input[\cf6 stk\cf0 .\cf7 top\cf0 ()] <= input[i])\
        \{\
            \cf3 cout\cf0 <<\cf8 "Push "\cf0 <<input[i]<<\cf8 " onto stack\\n"\cf0 ;\
            \cf6 stk\cf0 .\cf7 push\cf0 (i);\
            i++;\
        \}\
        \cf4 else\cf0 \
        \{\
            \cf3 cout\cf0 <<input[\cf6 stk\cf0 .\cf7 top\cf0 ()]<<\cf8 " > "\cf0 <<input[i]<<\cf7 endl\cf0 ;\
            \cf3 cout\cf0 <<\cf8 "Stack empty "\cf0 <<\cf6 stk\cf0 .\cf7 empty\cf0 ()<<\cf7 endl\cf0 ;\
            \cf3 cout\cf0 <<\cf8 "-------\\n"\cf0 ;\
            \cf4 while\cf0 (!\cf6 stk\cf0 .\cf7 empty\cf0 () && input[\cf6 stk\cf0 .\cf7 top\cf0 ()] > input[i])\
            \{\
                top = \cf6 stk\cf0 .\cf7 top\cf0 ();\
                \cf6 stk\cf0 .\cf7 pop\cf0 ();\
                \cf3 cout\cf0 <<input[top]<<\cf8 " > "\cf0 <<input[i]<<\cf7 endl\cf0 ;\
                \cf3 cout\cf0 <<\cf8 "Stack empty "\cf0 <<\cf6 stk\cf0 .\cf7 empty\cf0 ()<<\cf7 endl\cf0 ;\
                \
                \cf4 if\cf0 (\cf6 stk\cf0 .\cf7 empty\cf0 ())\
                \{\
                    \cf3 cout\cf0 <<\cf8 "Stack is empty\\n"\cf0 ;\
                    area = input[top] *i;\
                    \cf3 cout\cf0 <<\cf8 "Area = "\cf0 <<area<<\cf7 endl\cf0 ;\
                \}\
                \cf4 else\cf0 \
                \{\
                    area = input[top] * (i - \cf6 stk\cf0 .\cf7 top\cf0 () -\cf5 1\cf0 );\
                    \cf3 cout\cf0 <<\cf8 "Area = "\cf0 <<area<<\cf7 endl\cf0 ;\
                \}\
                \cf4 if\cf0 (area > MaxArea)\
                \{\
                    MaxArea = area;\
                \}\
            \}\
        \}\
    \}\
    \
    \cf3 cout\cf0 <<\cf8 "************\\n"\cf0 ;\
    \cf4 while\cf0 (!\cf6 stk\cf0 .\cf7 empty\cf0 ())\
    \{\
        \cf3 cout\cf0 <<\cf8 "Stack is not empty\\n"\cf0 ;\
        top = \cf6 stk\cf0 .\cf7 top\cf0 ();\
        \cf6 stk\cf0 .\cf7 pop\cf0 ();\
        \cf3 cout\cf0 <<\cf8 "stack top is "\cf0 <<input[top]<<\cf7 endl\cf0 ;\
        \cf3 cout\cf0 <<\cf8 "Stack empty "\cf0 <<\cf6 stk\cf0 .\cf7 empty\cf0 ()<<\cf7 endl\cf0 ;\
        \cf4 if\cf0 (\cf6 stk\cf0 .\cf7 empty\cf0 ())\
        \{\
            area = input[top] *i;\
            \cf3 cout\cf0 <<\cf8 "Area = "\cf0 <<area<<\cf7 endl\cf0 ;\
        \}\
        \cf4 else\cf0 \
        \{\
            area = input[top] * (i - \cf6 stk\cf0 .\cf7 top\cf0 () -\cf5 1\cf0 );\
            \cf3 cout\cf0 <<\cf8 "Area = "\cf0 <<area<<\cf7 endl\cf0 ;\
        \}\
        \cf4 if\cf0 (area > MaxArea)\
        \{\
            MaxArea = area;\
        \}\
    \}\
    \
    \cf3 cout\cf0 <<MaxArea<<\cf7 endl\cf0 ;\
    \
\}}