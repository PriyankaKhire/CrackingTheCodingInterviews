{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf400
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red0\green116\blue0;\red92\green38\blue153;\red170\green13\blue145;
\red28\green0\blue207;\red63\green110\blue116;\red46\green13\blue110;\red196\green26\blue22;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab529
\pard\tx529\pardeftab529\pardirnatural

\f0\fs22 \cf2 \CocoaLigature0 /*\
 Given an array and an integer k, find the maximum for each and every contiguous subarray of size k.\
 \
 Examples:\
 \
 Input :\
 arr[] = \{1, 2, 3, 1, 4, 5, 2, 3, 6\}\
 k = 3\
 Output :\
 3 3 4 5 5 5 6\
 \
 Input :\
 arr[] = \{8, 5, 10, 7, 9, 4, 15, 12, 90, 13\}\
 k = 4\
 Output :\
 10 10 10 15 15 90 90\
 */\cf0 \
\
\
\cf3 queue\cf0 <\cf4 int\cf0 > qu;\
\
\cf4 int\cf0  main()\
\{\
    \cf4 const\cf0  \cf4 static\cf0  \cf4 int\cf0  n = \cf5 10\cf0 ;\
    \cf4 int\cf0  k = \cf5 4\cf0 ;\
    \cf4 int\cf0  arr[n] = \{\cf5 8\cf0 , \cf5 5\cf0 , \cf5 10\cf0 , \cf5 7\cf0 , \cf5 9\cf0 , \cf5 4\cf0 , \cf5 15\cf0 , \cf5 12\cf0 , \cf5 90\cf0 , \cf5 13\cf0 \};\
    \cf4 int\cf0  answer[n];\
    \cf4 int\cf0  max = \cf5 0\cf0 ;\
    \cf4 int\cf0  i = \cf5 0\cf0 ;\
    \cf4 int\cf0  j = \cf5 0\cf0 ;\
    \cf4 while\cf0 (i < n)\
    \{\
        \cf4 if\cf0 (j<k)\
        \{\
            \cf4 if\cf0 (arr[j+i] > max)\
            \{\
                max = arr[j+i];\
            \}\
            \cf6 qu\cf0 .\cf7 push\cf0 (max);\
            j++;\
        \}\
        \cf4 if\cf0 (j == k)\
        \{\
            answer[i] = \cf6 qu\cf0 .\cf7 back\cf0 ();\
            i++;\
            j--;\
            \cf6 qu\cf0 .\cf7 pop\cf0 ();\
        \}\
    \}\
    \
    \cf4 for\cf0 (\cf4 int\cf0  i = \cf5 0\cf0 ; i < n-k+\cf5 1\cf0 ; i ++)\
    \{\
        \cf3 cout\cf0 <<answer[i]<<\cf8 " "\cf0 ;\
    \}\
    \cf3 cout\cf0 <<\cf7 endl\cf0 ;\
\}}