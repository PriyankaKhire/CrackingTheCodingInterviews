{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf400
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red170\green13\blue145;\red92\green38\blue153;\red196\green26\blue22;
\red63\green110\blue116;\red28\green0\blue207;\red0\green116\blue0;\red46\green13\blue110;\red38\green71\blue75;
}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab529
\pard\tx529\pardeftab529\pardirnatural

\f0\fs22 \cf2 \CocoaLigature0 struct\cf0  HashTableNode\
\{\
    \cf3 string\cf0  value = \cf4 "NULL"\cf0 ;\
    \cf5 HashTableNode\cf0  *link = \cf2 NULL\cf0 ;\
\};\
\cf2 static\cf0  \cf2 const\cf0  \cf2 int\cf0  HashTableSize = \cf6 5\cf0 ;\
\cf5 HashTableNode\cf0  **HashTable = \cf2 new\cf0  \cf5 HashTableNode\cf0  *[\cf5 HashTableSize\cf0 ];\
\
\cf2 int\cf0  HashFunction(\cf2 int\cf0  key)\
\{\
    \cf2 return\cf0  key%\cf5 HashTableSize\cf0 ;\
\}\
\
\cf2 int\cf0  main()\
\{\
    \cf7 //Make it a point to always initialise\cf0 \
    \cf2 for\cf0 (\cf2 int\cf0  i = \cf6 0\cf0 ; i<\cf5 HashTableSize\cf0 ; i++)\
    \{\
        \cf5 HashTable\cf0 [i] = \cf2 new\cf0  \cf5 HashTableNode\cf0 ;\
    \}\
    \
    \cf2 char\cf0  ch;\
    \cf2 int\cf0  key;\
    \cf3 string\cf0  value;\
    \cf3 cout\cf0 <<\cf4 "Would you like to enter key value pair ? y/n"\cf0 <<\cf8 endl\cf0 ;\
    \cf3 cin\cf0 >>ch;\
    \cf2 while\cf0 (ch == \cf6 'y'\cf0  || ch == \cf6 'Y'\cf0 )\
    \{\
        \cf3 cout\cf0 <<\cf4 "Enter Key"\cf0 <<\cf8 endl\cf0 ;\
        \cf3 cin\cf0 >>key;\
        \cf2 int\cf0  index = \cf9 HashFunction\cf0 (key);\
        \cf3 cout\cf0 <<\cf4 "Enter value"\cf0 <<\cf8 endl\cf0 ;\
        \cf3 cin\cf0 >>value;\
        \cf5 HashTableNode\cf0  *NewNode;\
        NewNode = \cf2 new\cf0  \cf5 HashTableNode\cf0 ;\
        NewNode->\cf5 value\cf0  = value;\
        NewNode->\cf5 link\cf0  = \cf2 NULL\cf0 ;\
        \cf2 if\cf0 (\cf5 HashTable\cf0 [index]->\cf5 link\cf0  == \cf2 NULL\cf0 )\
        \{\
            \cf5 HashTable\cf0 [index]->\cf5 link\cf0  = NewNode;\
        \}\
        \cf2 else\cf0 \
        \{\
            NewNode->\cf5 link\cf0  = \cf5 HashTable\cf0 [index]->\cf5 link\cf0 ;\
            \cf5 HashTable\cf0 [index]->\cf5 link\cf0  = NewNode;\
        \}\
        \cf3 cout\cf0 <<\cf4 "Index = "\cf0 <<index<<\cf8 endl\cf0 ;\
        \cf3 cout\cf0 <<\cf4 "Would you like to enter key value pair ? y/n"\cf0 <<\cf8 endl\cf0 ;\
        \cf3 cin\cf0 >>ch;\
    \}\
    \cf3 cout\cf0 <<\cf4 "Would you like to retrive key value pair ? y/n"\cf0 <<\cf8 endl\cf0 ;\
    \cf3 cin\cf0 >>ch;\
    \cf2 while\cf0 (ch == \cf6 'y'\cf0  || ch == \cf6 'Y'\cf0 )\
    \{\
        \cf3 cout\cf0 <<\cf4 "Enter Key"\cf0 <<\cf8 endl\cf0 ;\
        \cf3 cin\cf0 >>key;\
        \cf3 cout\cf0 <<\cf4 "Enter value"\cf0 <<\cf8 endl\cf0 ;\
        \cf3 cin\cf0 >>value;\
        \cf2 int\cf0  index = \cf9 HashFunction\cf0 (key);\
        \cf5 HashTableNode\cf0  *Ptr;\
        Ptr = \cf5 HashTable\cf0 [index]->\cf5 link\cf0 ;\
        \cf2 while\cf0 (Ptr != \cf2 NULL\cf0 )\
        \{\
            \cf2 if\cf0 (Ptr->\cf5 value\cf0  == value)\
            \{\
                \cf3 cout\cf0 <<\cf4 "Found"\cf0 <<\cf8 endl\cf0 ;\
                \cf2 break\cf0 ;\
            \}\
            \cf2 else\cf0 \
            \{\
                Ptr = Ptr->\cf5 link\cf0 ;\
            \}\
        \}\
        \cf2 if\cf0 (Ptr == \cf2 NULL\cf0 )\
        \{\
            \cf3 cout\cf0 <<\cf4 "Not Found"\cf0 <<\cf8 endl\cf0 ;\
            \cf2 break\cf0 ;\
        \}\
        \
        \cf3 cout\cf0 <<\cf4 "Would you like to retrive key value pair ? y/n"\cf0 <<\cf8 endl\cf0 ;\
        \cf3 cin\cf0 >>ch;\
    \}\
\
\}\
}