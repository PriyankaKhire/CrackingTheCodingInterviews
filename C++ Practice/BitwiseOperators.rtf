{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf400
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red170\green13\blue145;\red0\green116\blue0;\red92\green38\blue153;
\red28\green0\blue207;\red196\green26\blue22;\red46\green13\blue110;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab529
\pard\tx529\pardeftab529\pardirnatural

\f0\fs22 \cf0 \CocoaLigature0 \
\cf2 int\cf0  main()\
\{\
    \cf3 //Logical Operators\cf0 \
    \
    \cf3 //  && And\cf0 \
    \cf3 //  || Or\cf0 \
    \cf3 //   ! not\cf0 \
    \
    \cf3 //Ternary operator\cf0 \
    \cf4 string\cf0  Answer;\
    \
    Answer = (\cf5 5\cf0  > \cf5 3\cf0 ) ? \cf6 "Yes"\cf0  : \cf6 "No"\cf0  ;\
    \cf4 cout\cf0 <<Answer<<\cf7 endl\cf0 ;\
    \
    Answer = (\cf5 5\cf0  > \cf5 6\cf0 ) ? \cf6 "Yes"\cf0  : \cf6 "No"\cf0  ;\
    \cf4 cout\cf0 <<Answer<<\cf7 endl\cf0 ;\
\
    \cf3 //Comma Operator\cf0 \
    \cf2 int\cf0  a = \cf5 0\cf0 ;\
    \cf2 int\cf0  b;\
    \
    a = (b = \cf5 3\cf0 , b+\cf5 5\cf0 );\
    \cf4 cout\cf0 <<a<<\cf7 endl\cf0 ;\
    \
    \cf3 //Bitwise operators\cf0 \
    \cf2 int\cf0  bit1 = \cf5 0x01\cf0 ;  \cf3 //0001\cf0 \
    \cf2 int\cf0  bit2 = \cf5 0x02\cf0 ;  \cf3 //0010\cf0 \
    \cf2 int\cf0  answer;\
    \
      \cf3 //Or\cf0 \
    answer = bit1 | bit2; \cf3 //0011 = 3\cf0 \
    \cf4 cout\cf0 <<\cf6 "Bitwise OR "\cf0 <<answer<<\cf7 endl\cf0 ;\
    \cf4 cout\cf0 <<\cf6 "Bitwise OR "\cf0 <<(\cf5 1\cf0 |\cf5 2\cf0 )<<\cf7 endl\cf0 ;\
    \
    \cf3 //And\cf0 \
    answer = bit1 & bit2;\
    \cf4 cout\cf0 <<\cf6 "Bitwise And "\cf0 <<answer<<\cf7 endl\cf0 ; \cf3 //0000\cf0 \
    \cf4 cout\cf0 <<\cf6 "Bitwise And "\cf0 <<(\cf5 1\cf0 &\cf5 2\cf0 )<<\cf7 endl\cf0 ;\
    \
    \cf3 //XOR\cf0 \
    answer = bit1 ^ bit2;\
    \cf4 cout\cf0 <<\cf6 "Bitwise XOR "\cf0 <<answer<<\cf7 endl\cf0 ; \cf3 //0011\cf0 \
    \cf4 cout\cf0 <<\cf6 "Bitwise XOR "\cf0 <<(\cf5 3\cf0 ^\cf5 3\cf0 )<<\cf7 endl\cf0 ;\
    \
    \cf3 //Not\cf0 \
    answer = ~bit1;\
    \cf4 cout\cf0 <<\cf6 "Bitwise NOT "\cf0 <<answer<<\cf7 endl\cf0 ; \cf3 //1110\cf0 \
    \cf4 cout\cf0 <<\cf6 "Bitwise NOT "\cf0 <<(~bit2)<<\cf7 endl\cf0 ; \cf3 //1101\cf0 \
    \
    \cf3 //Shift\cf0 \
    \
           \cf3 //Left\cf0 \
           answer = bit1 << \cf5 1\cf0 ;\
           \cf4 cout\cf0 <<\cf6 "When 0001 is shifted by 1 on left the answer should be 0010 -> "\cf0 <<answer<<\cf7 endl\cf0 ;\
           answer = bit2 << \cf5 2\cf0 ;\
           \cf4 cout\cf0 <<\cf6 "When 0010 is shifted on left by 2 the answer should be 1000 ->"\cf0 <<answer<<\cf7 endl\cf0 ;\
           answer = bit1 << \cf5 4\cf0 ;\
           \cf4 cout\cf0 <<\cf6 "when 0001 is shifted on left by 4 the answer should be 10000 -> "\cf0 <<answer<<\cf7 endl\cf0 ;\
    \
           \cf3 //Right\cf0 \
           answer = bit2 >> \cf5 1\cf0 ;\
           \cf4 cout\cf0 <<\cf6 "When 0010 is shifted by 1 on right the answer should be 0001 -> "\cf0 <<answer<<\cf7 endl\cf0 ;\
           answer = bit1 >> \cf5 2\cf0 ;\
           \cf4 cout\cf0 <<\cf6 "When 0001 is shifted by 2 on right side the answer should be 0000 -> "\cf0 <<answer<<\cf7 endl\cf0 ;\
           answer = bit2 >> \cf5 3\cf0 ;\
           \cf4 cout\cf0 <<\cf6 "When 0010 is shifted by 3 on right side the answer should be 0000 -> "\cf0 <<answer<<\cf7 endl\cf0 ;\
    \
    \
    \
    \cf3 //sizeof\cf0 \
    \cf4 cout\cf0 <<\cf6 "Size of char "\cf0 <<\cf2 sizeof\cf0 (\cf2 char\cf0 )<<\cf6 " bytes or "\cf0 <<\cf2 sizeof\cf0 (\cf2 char\cf0 )*\cf5 8\cf0 <<\cf6 " bits"\cf0 <<\cf7 endl\cf0 ;\
    \cf4 cout\cf0 <<\cf6 "Size of int "\cf0 <<\cf2 sizeof\cf0 (\cf2 int\cf0 )<<\cf6 " bytes or "\cf0 <<\cf2 sizeof\cf0 (\cf2 int\cf0 )*\cf5 8\cf0 <<\cf6 " bits"\cf0 <<\cf7 endl\cf0 ;\
    \cf4 cout\cf0 <<\cf6 "Size of long "\cf0 <<\cf2 sizeof\cf0 (\cf2 long\cf0 )<<\cf6 " bytes or "\cf0 <<\cf2 sizeof\cf0 (\cf2 long\cf0 )*\cf5 8\cf0 <<\cf6 " bits"\cf0 <<\cf7 endl\cf0 ;\
    \cf4 cout\cf0 <<\cf6 "Size of double "\cf0 <<\cf2 sizeof\cf0 (\cf2 double\cf0 )<<\cf6 " bytes or "\cf0 <<\cf2 sizeof\cf0 (\cf2 double\cf0 )*\cf5 8\cf0 <<\cf6 " bits"\cf0 <<\cf7 endl\cf0 ;\
    \cf4 cout\cf0 <<\cf6 "Size of string "\cf0 <<\cf2 sizeof\cf0 (\cf4 string\cf0 )<<\cf6 " bytes or "\cf0 <<\cf2 sizeof\cf0 (\cf4 string\cf0 )*\cf5 8\cf0 <<\cf6 " bits"\cf0 <<\cf7 endl\cf0 ;\
    \
    \
    \
\}}