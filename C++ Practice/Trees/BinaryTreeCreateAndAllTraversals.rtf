{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf400
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red170\green13\blue145;\red63\green110\blue116;\red92\green38\blue153;
\red196\green26\blue22;\red28\green0\blue207;\red38\green71\blue75;\red46\green13\blue110;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab529
\pard\tx529\pardeftab529\pardirnatural

\f0\fs22 \cf0 \CocoaLigature0 \
\cf2 struct\cf0  TreeNode\
\{\
    \cf2 int\cf0  data;\
    \cf3 TreeNode\cf0  *llink;\
    \cf3 TreeNode\cf0  *rlink;\
\};\
\
\cf3 TreeNode\cf0  *RootNode = \cf2 new\cf0  \cf3 TreeNode\cf0 ;\
\
\cf2 void\cf0  createTree()\
\{\
    \cf2 char\cf0  ch;\
    \cf4 cout\cf0 <<\cf5 "insert ??\\n"\cf0 ;\
    \cf4 cin\cf0 >>ch;\
    \cf2 while\cf0 (ch == \cf6 'y'\cf0 )\
    \{\
        \cf2 if\cf0 (\cf3 RootNode\cf0 ->\cf3 data\cf0  == \cf6 0\cf0  && \cf3 RootNode\cf0 ->\cf3 llink\cf0  == \cf2 NULL\cf0  && \cf3 RootNode\cf0 ->\cf3 rlink\cf0  == \cf2 NULL\cf0 )\
        \{\
            \cf2 int\cf0  data;\
            \cf4 cout\cf0 <<\cf5 "Enter Root data\\n"\cf0 ;\
            \cf4 cin\cf0 >>data;\
            \cf3 RootNode\cf0 ->\cf3 data\cf0  = data;\
        \}\
        \cf2 else\cf0 \
        \{\
            \cf3 TreeNode\cf0  *Ptr;\
            Ptr = \cf3 RootNode\cf0 ;\
            \cf2 char\cf0  LR;\
            \cf4 cout\cf0 <<\cf5 "Left or right ??\\n"\cf0 ;\
            \cf4 cin\cf0 >>LR;\
            \cf2 if\cf0 (LR == \cf6 'l'\cf0 )\
            \{\
                \cf2 if\cf0 (Ptr->\cf3 llink\cf0  == \cf2 NULL\cf0 )\
                \{\
                    \cf2 int\cf0  data;\
                    \cf4 cout\cf0 <<\cf5 "Enter data\\n"\cf0 ;\
                    \cf4 cin\cf0 >>data;\
                    \cf3 TreeNode\cf0  *NewNode = \cf2 new\cf0  \cf3 TreeNode\cf0 ;\
                    NewNode->\cf3 data\cf0  = data;\
                    NewNode->\cf3 llink\cf0  = NewNode->\cf3 rlink\cf0  = \cf2 NULL\cf0 ;\
                    Ptr->\cf3 llink\cf0  = NewNode;\
                \}\
                \cf2 else\cf0 \
                \{\
                    \cf2 while\cf0 (Ptr->\cf3 llink\cf0  != \cf2 NULL\cf0 )\
                    \{\
                        Ptr = Ptr->\cf3 llink\cf0 ;\
                    \}\
                    \cf2 int\cf0  data;\
                    \cf4 cout\cf0 <<\cf5 "Enter dataaaaaaaaaa\\n"\cf0 ;\
                    \cf4 cin\cf0 >>data;\
                    \cf3 TreeNode\cf0  *NewNode = \cf2 new\cf0  \cf3 TreeNode\cf0 ;\
                    NewNode->\cf3 data\cf0  = data;\
                    NewNode->\cf3 llink\cf0  = NewNode->\cf3 rlink\cf0  = \cf2 NULL\cf0 ;\
                    Ptr->\cf3 llink\cf0  = NewNode;\
                    \
                \}\
            \}\
            \cf2 else\cf0 \
                \cf2 if\cf0 (LR == \cf6 'r'\cf0 )\
            \{\
                \cf2 if\cf0 (Ptr->\cf3 rlink\cf0  == \cf2 NULL\cf0 )\
                \{\
                    \cf2 int\cf0  data;\
                    \cf4 cout\cf0 <<\cf5 "Enter data\\n"\cf0 ;\
                    \cf4 cin\cf0 >>data;\
                    \cf3 TreeNode\cf0  *NewNode = \cf2 new\cf0  \cf3 TreeNode\cf0 ;\
                    NewNode->\cf3 data\cf0  = data;\
                    NewNode->\cf3 llink\cf0  = NewNode->\cf3 rlink\cf0  = \cf2 NULL\cf0 ;\
                    Ptr->\cf3 rlink\cf0  = NewNode;\
\
                \}\
                \cf2 else\cf0 \
                \{\
                    \cf2 while\cf0 (Ptr->\cf3 rlink\cf0  != \cf2 NULL\cf0 )\
                    \{\
                        Ptr = Ptr->\cf3 rlink\cf0 ;\
                    \}\
                    \cf2 int\cf0  data;\
                    \cf4 cout\cf0 <<\cf5 "Enter dataaaaaaaaaa\\n"\cf0 ;\
                    \cf4 cin\cf0 >>data;\
                    \cf3 TreeNode\cf0  *NewNode = \cf2 new\cf0  \cf3 TreeNode\cf0 ;\
                    NewNode->\cf3 data\cf0  = data;\
                    NewNode->\cf3 llink\cf0  = NewNode->\cf3 rlink\cf0  = \cf2 NULL\cf0 ;\
                    Ptr->\cf3 rlink\cf0  = NewNode;\
\
                \}\
            \}\
            \
            \cf2 else\cf0 \
            \{\
                \cf4 cout\cf0 <<\cf5 "insert ??\\n"\cf0 ;\
                \cf4 cin\cf0 >>ch;\
            \}\
        \}\
    \}\
\}\
\
\cf2 void\cf0  inorder(\cf3 TreeNode\cf0  *Node)\
\{\
    \cf2 if\cf0 (Node == \cf2 NULL\cf0 )\
    \{\
        \cf2 return\cf0 ;\
    \}\
    \cf2 else\cf0 \
    \{\
    \cf7 inorder\cf0 (Node->\cf3 llink\cf0 );\
    \cf4 cout\cf0 <<Node->\cf3 data\cf0 <<\cf8 endl\cf0 ;\
    \cf7 inorder\cf0 (Node->\cf3 rlink\cf0 );\
    \}\
\}\
\
\cf2 void\cf0  preorder(\cf3 TreeNode\cf0  *Node)\
\{\
    \cf2 if\cf0 (Node == \cf2 NULL\cf0 )\
    \{\
        \cf2 return\cf0 ;\
    \}\
    \cf2 else\cf0 \
    \{\
        \cf4 cout\cf0 <<Node->\cf3 data\cf0 <<\cf8 endl\cf0 ;\
        \cf7 preorder\cf0 (Node->\cf3 llink\cf0 );\
        \cf7 preorder\cf0 (Node->\cf3 rlink\cf0 );\
    \}\
\}\
\
\cf2 void\cf0  PostOrder(\cf3 TreeNode\cf0  *Node)\
\{\
    \cf2 if\cf0 (Node == \cf2 NULL\cf0 )\
    \{\
        \cf2 return\cf0 ;\
    \}\
    \cf2 else\cf0 \
    \{\
        \cf7 PostOrder\cf0 (Node->\cf3 llink\cf0 );\
        \cf7 PostOrder\cf0 (Node->\cf3 rlink\cf0 );\
        \cf4 cout\cf0 <<Node->\cf3 data\cf0 <<\cf8 endl\cf0 ;\
    \}\
\}\
\
\cf2 int\cf0  main()\
\{\
    \cf3 RootNode\cf0 ->\cf3 data\cf0  = \cf6 0\cf0 ;\
    \cf3 RootNode\cf0 ->\cf3 llink\cf0  = \cf3 RootNode\cf0 ->\cf3 rlink\cf0  = \cf2 NULL\cf0 ;\
    \cf7 createTree\cf0 ();\
    \cf4 cout\cf0 <<\cf5 "Inorder\\n"\cf0 ;\
    \cf7 inorder\cf0 (\cf3 RootNode\cf0 );\
    \cf4 cout\cf0 <<\cf5 "PreOrder\\n"\cf0 ;\
    \cf7 preorder\cf0 (\cf3 RootNode\cf0 );\
    \cf4 cout\cf0 <<\cf5 "PostOrder\\n"\cf0 ;\
    \cf7 PostOrder\cf0 (\cf3 RootNode\cf0 );\
    \
\}}