{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf400
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red0\green116\blue0;\red170\green13\blue145;\red28\green0\blue207;
\red92\green38\blue153;\red196\green26\blue22;\red46\green13\blue110;\red63\green110\blue116;\red38\green71\blue75;
}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab529
\pard\tx529\pardeftab529\pardirnatural

\f0\fs22 \cf0 \CocoaLigature0 \
\cf2 //Sieve of Eratosthenes\cf0 \
\
\cf3 int\cf0  main()\
\{\
    \cf3 static\cf0  \cf3 const\cf0  \cf3 int\cf0  FindPrimeNumbersTill = \cf4 100\cf0 ;\
    \cf3 int\cf0  a[FindPrimeNumbersTill];\
    \
    \cf2 //Populate the array\cf0 \
    \cf3 for\cf0 (\cf3 int\cf0  i = \cf4 2\cf0 ; i <= FindPrimeNumbersTill; i++)\
    \{\
        a[i-\cf4 2\cf0 ] = i;\
    \}\
    \
    \cf5 cout\cf0 <<\cf6 "The prime Numbers in \\n"\cf0 ;\
    \cf3 for\cf0 (\cf3 int\cf0  i = \cf4 0\cf0 ; i < FindPrimeNumbersTill-\cf4 1\cf0 ;  i++)\
    \{\
        \cf3 if\cf0 (a[i] != \cf4 0\cf0 )\
        \{\
            \cf5 cout\cf0 <<a[i]<<\cf6 " "\cf0 ;\
        \}\
    \}\
\
    \cf5 cout\cf0 <<\cf7 endl\cf0 <<\cf6 "Are below \\n"\cf0 ;\
    \
    \cf3 for\cf0 (\cf3 int\cf0  i = \cf4 0\cf0 ; i<FindPrimeNumbersTill; i++)\
    \{\
        \cf3 if\cf0 (a[i] != \cf4 0\cf0 )\
        \{\
            \cf2 //Mark all it's multiples with 0\cf0 \
            \cf3 for\cf0 (\cf3 int\cf0  j = i+\cf4 1\cf0 ; j < FindPrimeNumbersTill; j++)\
            \{\
                \cf3 if\cf0 (a[j] != \cf4 0\cf0  && a[j]%a[i]==\cf4 0\cf0 )\
                \{\
                    \cf2 //if a[j] is a multiple\cf0 \
                    \cf2 //Mark it with zero\cf0 \
                    a[j] = \cf4 0\cf0 ;\
                \}\
            \}\
        \}\
    \}\
    \
    \cf3 for\cf0 (\cf3 int\cf0  i = \cf4 0\cf0 ; i < FindPrimeNumbersTill-\cf4 1\cf0 ;  i++)\
    \{\
        \cf3 if\cf0 (a[i] != \cf4 0\cf0 )\
        \{\
        \cf5 cout\cf0 <<a[i]<<\cf7 endl\cf0 ;\
        \}\
    \}\
    \
\}\
\
==================================================================================================================================================================\
\
\
\
\
\cf3 int\cf0  size = \cf4 100\cf0 ;\
\
\cf3 void\cf0  PrintArray(\cf3 int\cf0  a[])\
\{\
    \cf3 for\cf0 (\cf3 int\cf0  i = \cf4 0\cf0 ; i < \cf8 size\cf0 -\cf4 1\cf0 ; i++)\
    \{\
        \cf3 if\cf0 (a[i] != \cf4 0\cf0 )\
        \{\
        \cf5 cout\cf0 <<a[i]<<\cf6 " "\cf0 ;\
        \}\
    \}\
    \cf5 cout\cf0 <<\cf7 endl\cf0 ;\
\}\
\
\cf3 void\cf0  SieveOfErathnosis(\cf3 int\cf0  a[], \cf3 int\cf0  p)\
\{\
    \cf3 if\cf0 (p < \cf8 size\cf0 -\cf4 1\cf0 )\
    \{\
        \cf3 for\cf0 (\cf3 int\cf0  i = \cf4 0\cf0 ; i < \cf8 size\cf0 -\cf4 1\cf0 ; i++)\
        \{\
            \cf3 if\cf0 (a[p] != a[i] && a[i]%a[p] == \cf4 0\cf0  && a[i] != \cf4 0\cf0 )\
            \{\
                \cf2 //Strike off that number\cf0 \
                a[i] = \cf4 0\cf0 ;\
            \}\
        \}\
        p++;\
        \cf3 while\cf0 (a[p] == \cf4 0\cf0 )\
        \{\
            p++;\
        \}\
        \cf9 SieveOfErathnosis\cf0 (a, p);\
    \}\
\}\
\
\cf3 int\cf0  main()\
\{\
    \cf3 int\cf0  a[\cf8 size\cf0 -\cf4 1\cf0 ];\
    \cf2 //Put all numbers in array\cf0 \
    \cf3 for\cf0 (\cf3 int\cf0  i = \cf4 2\cf0 ; i <=\cf8 size\cf0 ; i++)\
    \{\
        a[i-\cf4 2\cf0 ] = i;\
    \}\
    \
    \cf9 PrintArray\cf0 (a);\
    \cf9 SieveOfErathnosis\cf0 (a, \cf4 0\cf0 );\
    \cf9 PrintArray\cf0 (a);\
    \
\}}