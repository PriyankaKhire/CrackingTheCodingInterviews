{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf400
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red170\green13\blue145;\red28\green0\blue207;\red38\green71\blue75;
\red63\green110\blue116;\red92\green38\blue153;\red196\green26\blue22;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab529
\pard\tx529\pardeftab529\pardirnatural

\f0\fs22 \cf2 \CocoaLigature0 static\cf0  \cf2 const\cf0  \cf2 int\cf0  size = \cf3 9\cf0 ;\
\
\cf2 void\cf0  Merge(\cf2 int\cf0  *a, \cf2 int\cf0  low, \cf2 int\cf0  high, \cf2 int\cf0  mid)\
\{\
    \cf2 if\cf0 (low < high)\
    \{\
        \cf2 int\cf0  i,j,k;\
        i = low;\
        j = mid+\cf3 1\cf0 ;\
        k = low;           //Notice that k = low and NOT 0\
        \cf2 int\cf0  c[high];\
        \
        \cf2 while\cf0 ( i <= mid && j <= high)\
        \{\
            \cf2 if\cf0 (a[i] < a[j])\
            \{\
                c[k] = a[i];\
                i++;\
                k++;\
            \}\
            \cf2 else\cf0 \
            \{\
                c[k] = a[j];\
                j++;\
                k++;\
            \}\
        \}\
        \cf2 while\cf0 ( i <=mid)\
        \{\
            c[k] = a[i];\
            i++;\
            k++;\
\
        \}\
        \cf2 while\cf0 ( j <= high)\
        \{\
            c[k] = a[j];\
            j++;\
            k++;\
        \}\
        \
        \cf2 for\cf0 (\cf2 int\cf0  q = low ; q < k; q++)\
        \{\
            a[q] = c[q];\
        \}\
    \}\
\}\
\
\cf2 void\cf0  MergeSort(\cf2 int\cf0  *a, \cf2 int\cf0  low, \cf2 int\cf0  high)\
\{\
    \cf2 if\cf0 (low < high)\
    \{\
        \cf2 int\cf0  mid = (low+high)/\cf3 2\cf0 ;\
        \cf4 MergeSort\cf0 (a, low, mid);\
        \cf4 MergeSort\cf0 (a, mid+\cf3 1\cf0 , high);\
        \cf4 Merge\cf0 (a, low, high, mid);\
    \}\
    \cf2 return\cf0 ;\
\}\
\
\cf2 int\cf0  main()\
\{\
    \cf2 int\cf0  a[\cf5 size\cf0 ] = \{\cf3 9\cf0 , \cf3 8\cf0 , \cf3 7\cf0 , \cf3 6\cf0 , \cf3 5\cf0 , \cf3 4\cf0 , \cf3 3\cf0 , \cf3 2\cf0 , \cf3 1\cf0 \};\
    \cf4 MergeSort\cf0 (a, \cf3 0\cf0 , \cf3 8\cf0 );\
    \cf2 for\cf0 (\cf2 int\cf0  i = \cf3 0\cf0 ; i <\cf5 size\cf0 ; i++)\
    \{\
        \cf6 cout\cf0 <<a[i]<<\cf7 " "\cf0 ;\
    \}\
\}}